#include <iostream>
using namespace std;
class line
{
private:
	int line[100];
public:
	int *p = line;
	int t;
	int *p1 = &t;
	void f0(int *p,int *p1);
	void f1(int *p,int *p1);
	void f2(int *p,int *p1);
	void f3(int *p,int *p1);
	void f4(int *p1);
	void f5(int *p1);
};
int main()
{
	line one;
	int t,n;
	cout << "请输入:1.输入栈中数据" << endl;
	cout << "2.数据进栈" << endl;
	cout << "3.数据出栈" << endl;
	cout << "4.计算当前栈大小" << endl;
	cout << "5.判断栈是空的还是满的" << endl;
	cin >> t;
	one.f0(one.p,one.p1);
	switch (t)
	{
	case 1:one.f1(one.p,one.p1); break;
	case 2:one.f2(one.p, one.p1); break;
	case 3:one.f3(one.p, one.p1); break;
	case 4:one.f4(one.p1); break;
	case 5:one.f5(one.p1); break;
	}
	cout << "是否要继续？" << "1.不要" << "2.要" << endl;
	cin >> n;
	while (n == 2)
	{
		cout << "请输入:1.输入栈中数据" << endl;
		cout << "2.数据进栈" << endl;
		cout << "3.数据出栈" << endl;
		cout << "4.计算当前栈大小" << endl;
		cout << "5.判断栈是空的还是满的" << endl;
		cin >> t;
		switch (t)
		{
		case 1:one.f1(one.p, one.p1); break;
		case 2:one.f2(one.p, one.p1); break;
		case 3:one.f3(one.p, one.p1); break;
		case 4:one.f4(one.p1); break;
		case 5:one.f5(one.p1); break;
		}
		cout << "是否要继续？" << "1.不要" << "2.要" << endl;
		cin >> n;
	}
	return 0;
}
void line::f0(int *p,int *p1)
{
	int i=0,n;
	*p1 = 0;
	cout << "请给栈输入数据(以0为终止)" << endl;
	cin >> n;
	if (n == 0)
		*p1 = 0;
	while (n != 0)
	{
		p[i] = n;
		i++;
		(*p1)++;
		cin >> n;
	}
}
void line::f1(int *p,int *p1)
{
	int i;
	if (*p1 ==0)
		cout << "栈中无数据" << endl;
	else
	{
		cout << "栈中数据为:" << endl;
		for (i = 0; i < *p1; i++)
			cout << p[i] << " ";
		cout << endl;
	}
}
void line::f2(int *p, int *p1)
{
	int i=*p1,n;
	cout << "请输入入栈数据（以0截至)" << endl;
	cin >> n;
	if (n == 0)
		cout << "无效输入" << endl;
	while (n != 0)
	{
		p[i] = n;
		i++;
		(*p1)++;
		cin >> n;
	}
	cout << "新栈为:" << endl;
	for (i = 0; i < *p1; i++)
		cout << p[i] << " ";
	cout << endl;
}
void line::f3(int *p, int *p1)
{
	int i=*p1-1, n,j;
	cout << "请输入出栈个数" << endl;
	cin >> n;
	if (n >= *p1)
		cout << "新栈为空" << endl;
	else
	{
		for (j = 0; j < n; j++)
		{
			p[i] = 0;
			(*p1)--;
			i--;
		}
		cout << "新栈为:" << endl;
		for (i = 0; i < *p1; i++)
			cout << p[i] << " ";
		cout << endl;
	}
}
void line::f4(int *p1)
{
	int i;
	cout << "栈中数据个数为:" << *p1 << endl;
}
void line::f5(int *p1)
{
	if (*p1 == 0)
		cout << "栈为空" << endl;
	else
	{
		if (*p1 == 100)
			cout << "栈已满" << endl;
		else
			cout << "栈既非空也没满 " << "且栈内数据个数为：" << *p1 << endl;
	}
}
