#include<iostream>
#include <math.h>
using namespace std;
int main()
{
	void f1(float *p, int n);
	void f2(float *p, int n);
	float len[10];
	float *p = len;
	int n, i;
	cout << "请输入提供边长个数" << endl;
	cin >> n;
	cout << "请输入边长" << endl;
	for (i = 0; i < n; i++)
		cin >> len[i];
	f1(p, n);
	f2(p, n);
	return 0;
}
void f1(float *p, int n)
{
	int f3(float a, float b, float c);
	int i;
	int t = 0;
	float max;
	max = p[0] + p[1] + p[2];
	for (i = 0; i < n - 2; i++)
		if (((p[i] + p[i + 1] + p[i + 2]) > max) && (f3(p[i], p[i + 1], p[i + 2]) == 1))
		{
		max = p[i] + p[i + 1] + p[i + 2];
		t = i;
		}
	if ((max == p[0] + p[1] + p[2]) && (f3(p[0], p[1], p[2]) == 0))
		cout << "最大周长为：" << "0" << endl;
	else
	cout << "最大周长为：" << max << "（" << p[t] << "," << p[t + 1] << "," << p[t + 2] << "）" << endl;
}
void f2(float *p, int n)
{
	int f3(float a, float b, float c);
	float f4(float a, float b, float c);
	int i, t=0;
	float max;
	max = f4(p[0], p[1], p[2]);
	for (i = 0; i < n - 2; i++)
		if ((f4(p[i], p[i + 1], p[i + 2]) > max)&&(f3(p[i],p[i+1],p[i+2])==1))
		{
			max = f4(p[i], p[i + 1], p[i + 2]);
			t = i;
		}
	if ((max == f4(p[0], p[1], p[2])) && (f3(p[0], p[1], p[2]) == 0))
		cout << "最大面积为：" << "0" << endl;
	else
		cout << "最大面积为：" << max << "（" << p[t] << "," << p[t + 1] << "," << p[t + 2] << "）" << endl;
}
int f3(float a, float b, float c)
{
	if ((a + b > c) && (a + c > b) && (b + c > a))
		return 1;
	else
		return 0;
}
float f4(float a, float b, float c)
{
	float p;
	p = (a + b + c) / 2;
	p = sqrt(p*(p - a)*(p - b)*(p - c));
	return p;
}